{"version":3,"sources":["img/light.jpg","img/dark.jpg","module/getIdFromUrl.js","components/PersonListItem.jsx","components/People.jsx","components/FilmsItem.jsx","components/PersonFilms.jsx","components/Person.jsx","components/SearchForm.jsx","components/Header.jsx","components/SearchPage.jsx","components/SingleFilm.jsx","components/GlobalStyles.js","components/Themes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getIdFromUrl","url","parseInt","match","PersonItem","styled","li","theme","borderColor","background","Photo","div","Name","h3","StyledLink","Link","text","PersonListItem","name","id","to","key","PeopleList","ul","shadow","People","useState","people","setPeople","useEffect","axios","get","then","res","data","results","map","person","FilmItem","hover","Poster","Title","FilmsItem","title","FilmList","PersonFilms","filmsUrls","films","setfilms","all","spread","film","episode_id","Wrapper","PersonWrapper","FilmsWrapper","right","Data","p","h2","Person","setPerson","personId","useParams","gender","height","hair_color","Form","form","Input","input","ButtonInput","SearchForm","searchTerm","setSearchTerm","history","useHistory","onSubmit","event","push","preventDefault","type","value","onChange","target","min","placeholder","HeaderComponent","header","Navigation","ToggleButton","button","Header","toggle","side","onClick","SearchPage","searchPeople","setSearchPeople","loaded","setLoaded","PosterWrapper","left","FilmWrapper","Description","SingleFilm","setFilm","filmId","director","producer","release_date","opening_crawl","GlobalStyles","createGlobalStyle","body","lightTheme","light","toggleButton","darkTheme","dark","Background","Container","App","stored","localStorage","getItem","isLightMode","setIsLightMode","themeToggler","useCallback","setItem","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6db00c12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light.f36e1df4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dark.0df16aa1.jpg\";","export default function getIdFromUrl(url) {\r\n\treturn parseInt(url.match(/\\d+/));\r\n}\r\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\n\nconst PersonItem = styled.li`\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n  cursor: pointer;\n  list-style-type: none;\n  background: ${({ theme }) => theme.background};\n  opacity: 0.7;\n  transition: all 0.50s ease;\n  &:hover {\n    opacity: 0.9;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Photo = styled.div`\n  margin: 20px;\n  width: 100px;\n  height: 100px;\n  background: #000;\n`;\nconst Name = styled.h3`\n  font-size: 20px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.text};\n\ttext-decoration: none;\n  display: flex;\n`\n\nfunction PersonListItem({ name, id }) {\n  return (\n    <PersonItem>\n      <StyledLink to={`/react-films/people/${id}`} key={id}>\n        <Photo>\n        </Photo>\n        <Name>{name}</Name>\n      </StyledLink>\n    </PersonItem>\n  );\n}\n\nPersonListItem.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.number,\n};\n\nexport default PersonListItem\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nimport getIdFromUrl from '../module/getIdFromUrl.js';\nimport PersonListItem from './PersonListItem.jsx';\n\nconst PeopleList = styled.ul`\n  box-shadow: ${({ theme }) => theme.shadow};\n  padding: 0;\n`\n\nfunction People() {\n\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    axios.get('https://swapi.dev/api/people/')\n      .then((res) => {\n        setPeople(res.data.results);\n      });\n  }, [setPeople]);\n\n  return (\n    <PeopleList>\n      {people.map(person =>\n        <PersonListItem\n          name={person.name}\n          id={getIdFromUrl(person.url)}\n          key={getIdFromUrl(person.url)} />)}\n    </PeopleList>\n  );\n}\n\nexport default People\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\nimport getIdFromUrl from '../module/getIdFromUrl.js'\n\nconst FilmItem = styled.li`\n  padding: 20px;\n  border-bottom: 1px solid #fff;\n  list-style-type: none;\n  cursor: pointer;\n  display: flex;\n  background: transparent;\n  transition: all 0.50s ease;\n  &:hover {\n    background: ${({ theme }) => theme.hover};\n    color: ${({ theme }) => theme.text};\n  }\n  &:last-child {\n\t  border-bottom: none;\n  }\n  @media (max-width: 768px) {\n    padding: 10px;\n  }\n`;\nconst StyledLink = styled(Link)`\n\tcolor: ${({ theme }) => theme.text};\n\ttext-decoration: none;\n  display: flex;\n  width: 100%;\n`;\nconst Poster = styled.div`\n\twidth: 150px;\n\theight: 150px;\n\tbackground: ${({ theme }) => theme.text};\n  margin-right: 25px;\n  @media (max-width: 768px) {\n    margin-right: 10px;\n    width: 80px;\n\t  height: 80px;\n  }\n`;\nconst Title = styled.h3`\n  font-size: 30px;\n  @media (max-width: 992px) {\n    font-size: 20px;\n  }\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nfunction FilmsItem({ title, url }) {\n  return (\n    <FilmItem>\n      <StyledLink to={`/react-films/films/${getIdFromUrl(url)}`} key={getIdFromUrl(url)}>\n        <Poster>\n        </Poster>\n        <Title>{title}</Title>\n      </StyledLink>\n    </FilmItem>\n  );\n}\n\n\nFilmsItem.propTypes = {\n  title: PropTypes.string,\n  url: PropTypes.string,\n};\n\nexport default FilmsItem;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nimport FilmsItem from './FilmsItem.jsx';\n\n\n\nconst FilmList = styled.ul`\n  margin: 0;\n  padding: 0;\n`\n\nfunction PersonFilms({ filmsUrls }) {\n\n  const [films, setfilms] = useState([]);\n\n  useEffect(() => {\n    axios.all(filmsUrls.map(url => axios.get(url)))\n      .then(axios.spread(function (...res) {\n        setfilms(res)\n      }));\n  }, [setfilms, filmsUrls]);\n\n  return (\n    <FilmList>\n      {films && films.map(film =>\n        <FilmsItem\n          title={film.data.title}\n          url={film.data.url}\n          key={film.data.episode_id}\n        />)}\n    </FilmList>\n  )\n}\n\nPersonFilms.propTypes = {\n  filmsUrls: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default PersonFilms\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport PersonFilms from './PersonFilms.jsx';\n\n\nconst Wrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n  box-shadow: ${({ theme }) => theme.shadow};\n  @media (max-width: 576px) {\n    flex-direction: column;\n  }\n`;\nconst PersonWrapper = styled.div`\n  width: 500px;\n  color: ${({ theme }) => theme.text};\n  background-color: transparent;\n  @media (max-width: 576px) {\n    width: 100%;\n  }\n`;\nconst FilmsWrapper = styled.div`\n\ttext-align: center;\n  width:100%;\n  background: ${({ theme }) => theme.right};\n  opacity: 0.8;\n`;\nconst Photo = styled.div`\n\tmax-width: 100%;\n\theight: 350px;\n\tbackground: ${({ theme }) => theme.background};\n  margin: 20px;\n  @media (max-width: 576px) {\n    height: 250px;\n  }\n`;\nconst Name = styled.h3`\n  font-size: 25px;\n  color: #df691a;\n  margin: 30px;\n`;\nconst Data = styled.p`\n\tfont-size: 20px;\n\tmargin: 15px;\n\tcolor: #df691a;\n`;\nconst Title = styled.h2`\n\tfont-size: 30px;\n\tmargin: 30px;\n  color: ${({ theme }) => theme.text};\n  @media (max-width: 992px) {\n    margin: 15px;\n  }\n`;\n\n\nfunction Person() {\n\n  const [person, setPerson] = useState({});\n  let { personId } = useParams();\n\n  useEffect(() => {\n    axios.get(`https://swapi.dev/api/people/${personId}/`)\n      .then((res) => {\n        setPerson(res.data);\n      });\n  }, [setPerson, personId]);\n\n\n  if (!person) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Wrapper>\n      <PersonWrapper>\n        <Name>{person.name}</Name>\n        <Photo></Photo>\n        <Data>gender: {person.gender}</Data>\n        <Data>height: {person.height}</Data>\n        <Data>hair: {person.hair_color}</Data>\n      </PersonWrapper>\n      <FilmsWrapper>\n        <Title>Films</Title>\n        {person.films && <PersonFilms filmsUrls={person.films} />}\n      </FilmsWrapper>\n    </Wrapper>\n  );\n}\n\nexport default Person;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from \"styled-components\";\n\n\nconst Form = styled.form`\n\tdisplay: flex;\n\talign-items: center;\n`\nconst Input = styled.input`\n\tpadding: 8px;\n\tbackground: #2b3e50;\n\tcolor:#fff;\n\tfont-size: 16px;\n\tborder: 1px solid rgba(0,0,0,.15);\n\t\t&:focus{\n\t\t\toutline: none;\n\t\t\tborder-color: #ebebeb;\n    }\n`\nconst ButtonInput = styled.input`\n\tcolor: #fff;\n\tfont-size: 16px;\n\ttext-transform: uppercase;\n\tbackground-color: #4e5d6c;\n\tborder: 1px solid #4e5d6c;\n\tpadding: 8px;\n\t\t&:hover{\n\t\t\tborder-color: #ebebeb;\n    }\n`\n\n\nconst SearchForm = () => {\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  let history = useHistory();\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  }\n\n  const handleSubmit = event => {\n    history.push(`/react-films/search/${searchTerm}`);\n    setSearchTerm('');\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={searchTerm} onChange={handleChange} min='2' placeholder=\"Search person...\" />\n        <ButtonInput type=\"submit\" value='Search' />\n      </Form>\n    </div>\n  )\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\nimport SearchForm from './SearchForm.jsx';\n\n\nconst HeaderComponent = styled.header`\n\tbackground-color: transparent;\n\tpadding 30px 0;\n`;\nconst Navigation = styled.div`\n\tdisplay: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\nconst StyledLink = styled(Link)`\n\twidth: 150px;\n\tpadding: 8px 0;\n\tfont-size: 16px;\n\ttext-transform: uppercase;\n\tcolor: #fff;\n\tbackground-color: #df691a;\n\tborder: 1px solid #df691a;\n\tpadding: 8px;\n\ttext-decoration: none;\n  text-align: center;\n  @media (max-width: 576px) {\n    width: 100px;\n  }\n`;\nconst ToggleButton = styled.button`\n  background: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.text};\n  text-transform: uppercase;\n  width: 150px;\n  @media (max-width: 576px) {\n    width: 100px;\n  }\n`\n\nfunction Header({ toggle, side }) {\n  return (\n    <HeaderComponent>\n      <Navigation>\n        <StyledLink to=\"/react-films/\">Home</StyledLink>\n        <ToggleButton onClick={toggle}>{!side ? 'Dark' : 'Light'} side</ToggleButton>\n      </Navigation>\n      <SearchForm />\n    </HeaderComponent>\n  )\n}\n\nHeader.propTypes = {\n  toggle: PropTypes.func,\n  side: PropTypes.bool\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport PersonListItem from './PersonListItem.jsx';\nimport getIdFromUrl from '../module/getIdFromUrl.js';\n\nfunction SearchPage() {\n\n  const [searchPeople, setSearchPeople] = useState([]);\n  const [loaded, setLoaded] = useState(false)\n\n  let { searchTerm } = useParams();\n  const searchUrl = 'https://swapi.dev/api/people/?search=';\n\n  useEffect(() => {\n    axios.get(searchUrl + searchTerm)\n      .then((res) => {\n        setSearchPeople(res.data.results);\n        setLoaded(true)\n      });\n  }, [searchTerm]);\n\n  return (\n    <div>\n      {\n        loaded\n        &&\n        searchPeople.map(person =>\n          <PersonListItem\n            name={person.name}\n            id={getIdFromUrl(person.url)}\n            key={person.url}\n          />)\n      }\n    </div>\n  )\n}\n\nexport default SearchPage;\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nconst Wrapper = styled.div`\n\twidth:100%;\n  display: flex;\n  box-shadow: ${({ theme }) => theme.shadow};\n  @media (max-width: 576px) {\n    flex-direction: column;\n  }\n`;\nconst PosterWrapper = styled.div`\n\twidth: 500px;\n  color: #ebebca;\n  background-color: ${({ theme }) => theme.left};\n  @media (max-width: 576px) {\n    width: 100%;\n  }\n`;\nconst FilmWrapper = styled.div`\n\twidth:100%;\n  background: ${({ theme }) => theme.right};\n  @media (max-width: 768px) {\n  }\n  @media (max-width: 576px) {\n    width:100%;\n  }\n`;\nconst Poster = styled.div`\n\tmax-width: 100%;\n\theight: 350px;\n\tbackground: #000;\n\tmargin: 20px;\n`;\nconst Data = styled.p`\n\tfont-size: 20px;\n\tmargin: 20px;\n\tcolor: #df691a;s\n`;\nconst Title = styled.h2`\n\tfont-size: 30px;\n\tmargin: 30px;\n  color: ${({ theme }) => theme.text};\n  @media (max-width: 768px) {\n    margin: 15px;\n  }\n  @media (max-width: 576px) {\n    font-size: 25px;\n  }\n`;\nconst Description = styled.p`\n\tfont-size: 20px;\n\tmargin: 20px;\n\tcolor: ${({ theme }) => theme.text};\n`;\n\n\nfunction SingleFilm() {\n\n  const [film, setFilm] = useState();\n\n  let { filmId } = useParams();\n\n  useEffect(() => {\n    axios.get(`https://swapi.dev/api/films/${filmId}/`)\n      .then((res) => {\n        setFilm(res.data);\n      });\n  }, [setFilm, filmId]);\n\n  if (!film) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Wrapper>\n      <PosterWrapper>\n        <Poster></Poster>\n        <Data>Director: {film.director}</Data>\n        <Data>Producers : {film.producer}</Data>\n        <Data>Release date  : {film.release_date}</Data>\n      </PosterWrapper>\n      <FilmWrapper>\n        <Title>\n          Episod {film.episode_id}: {film.title}\n        </Title>\n        <Description>\n          {film.opening_crawl}\n        </Description>\n      </FilmWrapper>\n    </Wrapper>\n  );\n}\n\nexport default SingleFilm;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n  `;\n","import light from '../img/light.jpg';\nimport dark from '../img/dark.jpg';\n\n\nexport const lightTheme = {\n  body: `#2b3e50 url(${light}) center/cover no-repeat`,\n  text: '#000',\n  toggleButton: '#000',\n  background: '#dad7dc',\n  borderColor: '#000',\n  right: '#dad7dc',\n  hover: '#fff',\n  shadow: '0 0 15px 0 rgba(255,255,255,.8)'\n}\nexport const darkTheme = {\n  body: `#2b3e50 url(${dark}) center/cover no-repeat`,\n  text: '#fff',\n  toggleButton: '#fff',\n  background: '#212f3e',\n  borderColor: '#fff',\n  right: '#4e5d6c',\n  hover: '#212f3e',\n  shadow: '0 0 25px 0 rgba(255,0,0,.8)'\n}\n","import React, { useState, useCallback } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport People from './components/People.jsx';\nimport Person from './components/Person.jsx';\nimport Header from './components/Header.jsx';\nimport SearchPage from './components/SearchPage.jsx';\nimport SingleFilm from './components/SingleFilm.jsx';\n\nimport { GlobalStyles } from \"./components/GlobalStyles.js\";\nimport { lightTheme, darkTheme } from \"./components/Themes.js\"\n\n\nconst Background = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  background: ${({ theme }) => theme.body};\n  background-attachment: fixed;\n`\nconst Container = styled.div`\n  width: 1140px;\n  margin: 0 auto;\n  @media (max-width: 1200px) {\n    width: 95vw;\n  }\n`\n\nfunction App() {\n  const stored = localStorage.getItem(\"isDarkMode\");\n  const [isLightMode, setIsLightMode] = useState(stored === \"true\" ? true : false);\n\n  const themeToggler = useCallback(\n    () => {\n      isLightMode === true ? setIsLightMode(false) : setIsLightMode(true)\n      localStorage.setItem(\"isDarkMode\", !isLightMode);\n    },\n    [isLightMode]\n  );\n\n  return (\n    <ThemeProvider theme={!isLightMode ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <Background>\n          <Router>\n            <Container>\n              <Header toggle={themeToggler} side={isLightMode} />\n              <Switch>\n                <Route path=\"/react-films/\" exact>\n                  <People />\n                </Route>\n                <Route path=\"/react-films/people/:personId\" exact>\n                  <Person />\n                </Route>\n                <Route path=\"/react-films/films/:filmId\" exact>\n                  <SingleFilm />\n                </Route>\n                <Route path=\"/react-films/search/:searchTerm\" exact component={SearchPage}>\n                </Route>\n              </Switch>\n            </Container>\n          </Router>\n        </Background>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}